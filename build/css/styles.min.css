a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}body{font:16px/1.5 Montserrat,sans-serif;background:#111b2d;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizeLegibility}.hidden{display:none}@media (max-width:10000px),(orientation:landscape) and (max-height:575px){.header{position:absolute;top:35px;left:50%;transform:translate(-50%,0);z-index:1}.header__socials{display:none}.header__logo{position:relative}.header__logo::before{content:"";position:absolute;top:40px;bottom:0;right:0;left:0;background-color:rgba(25,53,102,.4);filter:blur(40px);z-index:-1}}@media (min-width:768px) and (min-height:575px){.header{max-width:1140px;width:100%}.header__in{display:flex;justify-content:space-between;align-items:center;padding:0 25px}.header__socials{display:block}.header__socials .button{display:none}}.logo svg{width:120px;height:120px}.heading{font-weight:600;color:#fff;line-height:1.33}.heading_h1{margin-bottom:20px;font-size:48px;letter-spacing:-.03em;line-height:1.1}.heading_h2{font-size:32px}.heading_h3{font-size:24px}.heading_h4{margin-bottom:15px;font-weight:500;line-height:1.5}@media (max-width:425px){.heading_h1{font-size:35px;line-height:35px;line-height:1.33}}@media (min-width:768px) and (min-height:575px){.heading_h1{font-size:72px;line-height:72px}}.subheading{color:rgba(255,255,255,.75);font-weight:500}@media (max-width:10000px),(orientation:landscape) and (max-height:575px){.hero{position:relative;min-height:100vh;min-height:-webkit-fill-available;display:-ms-flex;display:flex;align-items:flex-end}.hero__background{position:fixed;top:0;left:0;height:100vh;width:100%;z-index:-1}.hero__background img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.hero__background::before{content:"";position:absolute;width:100%;height:270px;left:0;top:0;background:linear-gradient(180deg,#2654a8 0,rgba(30,82,163,0) 100%);opacity:.6}.hero__background::after{content:"";position:absolute;width:100%;height:80%;left:0;bottom:0;background:linear-gradient(0deg,#111b2de8 30%,rgba(12,55,121,0) 100%)}.hero__inner{padding:0 25px;padding-top:170px;padding-bottom:110px}.hero__socials{display:none}}@media (min-width:425px){.hero{display:block}.hero__inner{position:absolute;bottom:180px;padding-bottom:0}}@media (min-width:768px) and (min-height:575px){.hero__background{position:relative}.hero__socials{display:flex;justify-content:space-between;position:relative;margin-bottom:0;z-index:1}.hero__socials .facebook,.hero__socials .instagram{display:none}.hero__text{position:static;margin-bottom:24px;width:360px}.hero__text .subheading{opacity:1}.hero__text p{width:305px}}.button{display:inline-block;padding:16px 24px;font-size:14px;font-weight:600;text-decoration:none;border-radius:30px}.button:hover{cursor:pointer;transition:.2s}.button svg{width:24px;height:24px;margin-right:10px;vertical-align:middle}.button.number{background:#ffc700;color:#111b2d}.button.number:hover{background:#cc9f00}.button.telegram{border:1px solid rgba(255,255,255,.2);color:#ffc700}.button.telegram:hover{background:#ffc700;color:#111b2d}.button.telegram:hover svg{fill:#111b2d}.button.telegram svg{fill:#ffc700}@media (min-width:768px){.block__in{max-width:1140px;margin:0 auto}}.grid{padding:80px 25px}.grid__item{display:flex;flex-direction:column;margin-bottom:50px}.grid__item:last-child{margin-bottom:30px}.grid__item-icon{margin-right:20px}.grid__item-icon svg{width:64px;height:64px}.grid__item-header{display:flex;align-items:center;margin-bottom:15px}.grid__item-header>.heading{width:180px}.grid__item-content{margin-left:84px;color:rgba(255,255,255,.75)}.grid__item-price{position:absolute;bottom:-35px;left:0;font-size:32px;line-height:32px;color:#ffc700}@media (min-width:768px){.grid{background-color:rgba(16,112,201,.1)}}@media (min-width:1024px){.grid__in{display:flex;flex-wrap:wrap}.grid__item{width:33%}.grid__item-content{max-width:255px}}.splide{z-index:1}.splide__slide img{width:155px;height:155px;-o-object-fit:cover;object-fit:cover}@media (min-width:1024px) and (min-height:575px){.splide__slide img{width:272px;height:272px}}.socials{display:flex;align-items:center;justify-content:space-between;position:relative;width:33%}.socials a{position:relative;transition:.2s;padding:16px;width:56px;height:56px;box-sizing:border-box;display:block;flex:0 0 auto}.socials a:hover svg{width:26px;height:26px}.socials a.telegram{background:#ffc700;display:none;border-radius:50%;margin-left:15px}.socials a.telegram svg{fill:#111b2d}.socials svg{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:24px;height:24px;display:block;fill:transparent;transition:all .2s}.socials__popup{display:none}@media (min-width:768px){.socials a:not(:last-of-type){margin-right:15px}}@media (min-width:768px) and (min-height:575px){.socials__popup{display:block;position:absolute;left:-50px;top:100%;margin-top:30px;width:205px;padding:24px 32px 24px 24px;background-color:rgba(17,36,61,.7);border-radius:16px}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.socials__popup{background-color:rgba(17,36,61,.6);-webkit-backdrop-filter:blur(60px);backdrop-filter:blur(60px)}}.socials__popup::before{content:"";position:absolute;top:-8px;right:20px;border-style:solid;border-width:0 8px 8px 8px;border-color:transparent transparent rgba(17,36,61,.7) transparent}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.socials__popup::before{border-color:transparent transparent rgba(17,36,61,.6) transparent}}.socials__popup .heading{color:#ffc700}.socials__popup .subheading{color:#fff;font-weight:500}.socials__popup-close{position:absolute;width:35px;height:35px;top:20px;right:18px;background:0 0;border:none;cursor:pointer}.socials__popup-close svg{opacity:.4;stroke:#fff;width:16px;height:16px}.socials__popup-close:hover svg{opacity:1}.socials a.telegram{display:inline-block}}.footer{position:relative}.footer_sticky{background:0 0;position:sticky;bottom:0;left:0;padding:10px 25px;border-radius:30px 30px 0 0;z-index:5;background:#2f3e53}.footer__in{margin-top:200px;padding:0 25px 20px}.footer__logo{position:absolute;top:200px;left:50%;transform:translate(-50%,0);z-index:2}.footer__socials{position:relative;display:flex;justify-content:space-between;z-index:1}.footer__socials .socials__popup{display:none!important}.footer__socials .socials{justify-content:flex-end}@media (min-width:425px){.footer{background-color:rgba(16,112,201,.1)}.footer_sticky{background-color:#2f3e53}}@media (min-width:768px) and (min-height:575px){.footer_sticky{display:none}}@media (min-width:1024px) and (min-height:575px){.footer{padding:15px 0 70px}.footer__in{margin-top:80px}.footer__logo{top:67%;bottom:unset}}.promo{position:relative;margin-top:-30px}.promo__in{position:relative;padding:0 25px}.promo__telegram{margin-bottom:40px}.promo__telegram .telegram{margin-bottom:10px}.promo__telegram p{max-width:460px}.promo__card{background:rgba(17,36,61,.9);margin-bottom:40px;padding:32px;border-radius:16px}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.promo__card{background-color:rgba(17,36,61,.6);-webkit-backdrop-filter:blur(60px);backdrop-filter:blur(60px)}}.promo__card .heading{margin-bottom:8px}.promo__card .heading_h3{color:rgba(255,255,255,.75)}.promo__card .subheading{margin-bottom:32px}.promo__card span{font-size:32px;line-height:32px;font-weight:300;color:#ffc700}.promo__list ul{display:flex;justify-content:space-between;flex-wrap:wrap;margin:32px 0 40px}.promo__list-item{margin:0 20px 32px 0}.promo__list-item span{display:inline-block;margin-bottom:15px;width:20px;border-top:2px solid #5ad9d1}.promo__list-item p{font-size:16px;font-weight:500;color:rgba(255,255,255,.75)}.promo__vehicle{margin-top:35px}.promo__item{background:linear-gradient(71.92deg,#5ad9d1 0,rgba(90,217,209,0) 100%);flex:1 1 0;position:relative;margin-bottom:50px;padding:32px;border-radius:16px}.promo__item img{width:100%}.promo__item img.hydrocycle{max-width:470px}.promo__item img.boat{max-width:585px}.promo__item-title{text-align:right}.promo__item-title p{color:rgba(255,255,255,.75);font-weight:500}.promo__item-title span{color:#fff;font-weight:700}@media (min-width:425px){.promo__list-item{max-width:200px}}@media (min-width:768px) and (min-height:575px){.promo{padding-bottom:80px}.promo::after{content:"";position:absolute;left:0;bottom:0;width:100%;height:30px;background:url(../img/wave.png) repeat-x}.promo__telegram{display:none}.promo__item-title{font-size:24px}.promo__item-title p{line-height:32px}.promo__item-title span{line-height:24px}}@media (min-width:1024px) and (min-height:575px){.promo{margin-top:110px}.promo__card{max-width:460px;position:absolute;top:-350px;right:55px}.promo__list{margin-bottom:140px}.promo__vehicle{display:flex;margin-bottom:30px}.promo__item:first-child{margin-right:15px}.promo__item img.boat{position:absolute;bottom:0;left:-70px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5jc3MiLCJ1dGlscy9yZXNldC5zY3NzIiwidXRpbHMvbm9ybWFsaXplLnNjc3MiLCJjb21tb24vYmFzZS5zY3NzIiwiY29tbW9uL2hlYWRlci5zY3NzIiwiY29tbW9uL2xvZ28uc2NzcyIsImNvbW1vbi9oZWFkaW5nLnNjc3MiLCJjb21tb24vc3ViaGVhZGluZy5zY3NzIiwiY29tbW9uL2hlcm8uc2NzcyIsImNvbW1vbi9idXR0b24uc2NzcyIsImNvbW1vbi9ncmlkLnNjc3MiLCJjb21tb24vc2xpZGVyLnNjc3MiLCJjb21tb24vc29jaWFscy5zY3NzIiwidXRpbHMvdmFyaWFibGVzLnNjc3MiLCJjb21tb24vZm9vdGVyLnNjc3MiLCJjb21tb24vcHJvbW8uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQkEsRUFDQSxLQUNBLFFBQ0EsUUFmQSxPQXlEQSxRQUNBLE1BaUJBLE1BeENBLEVBbkJBLElBTkEsV0FiQSxLQThEQSxPQVRBLFFBWkEsT0FyQkEsS0FDQSxLQXVCQSxHQXRCQSxJQXlDQSxRQXhDQSxJQXRCQSxJQXlDQSxHQUNBLEdBbkJBLEdBd0NBLE1BaEJBLFNBa0JBLFdBREEsT0FFQSxPQWxCQSxLQTNDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0F5REEsT0FDQSxPQXRFQSxLQXlDQSxFQW5DQSxPQW9CQSxJQUNBLElBQ0EsSUF1QkEsTUFDQSxPQUpBLEdBOEJBLEtBUEEsS0FDQSxJQW5FQSxPQXlDQSxHQTJCQSxPQTVEQSxFQUVBLElBY0EsRUE2Q0EsS0E1Q0EsRUFDQSxLQTRDQSxRQTNDQSxNQTdCQSxLQThCQSxPQUNBLE9BQ0EsSUF5Q0EsUUF4Q0EsSUFpQkEsTUFFQSxNQUtBLEdBSkEsTUFHQSxHQUZBLE1Bb0JBLEtBbkJBLEdBckJBLEdBR0EsRUFPQSxHQVRBLElBMENBLE1DRUUsT0FBQSxFQUNBLFFBQVMsRUFDVCxPQUFBLEVBQ0EsVUFBQSxLQUNBLEtBQUEsUURBQSxlQUFnQixTQUtsQixRQUNBLE1BQ0EsUUFDQSxXQUNBLE9BQ0EsT0FDQSxPQUNBLE9BQ0EsS0FDQSxJQ0VBLFFBQ0UsUUFBQSxNREVGLEtDRUUsWUFBQSxFREVGLEdBQ0EsR0FDRSxXQUFZLEtBR2QsV0FDQSxFQ0VFLE9BQUEsS0RHRixpQkNBQSxrQkRFQSxRQURBLFNFOUhBLFFBQUEsR0FFQSxRQUFBLEtGa0lBLE1BQ0UsZ0JBQWlCLFNBQ2pCLGVBQUEsRUFHRiw0RUFVQSxLQUNFLFlBQWEsS0FFYix5QkFBMEIsS0FXNUIsS0VySEEsT0FBQSxFRjZIQSxLRXBIMkIsUUFBQSxNRjZIM0IsR0FDRSxVQUFBLElBV0YsR0VuSEEsV0FBQSxZRnNIRSxPQUFRLEVBRVIsU0FBVSxRQVNaLElFckhxQyxLQUFBLElBQU8sU0FBQSxDQUFBLFVGa0k1QyxFRWpIQSxXQUFBLElBT0EsWUZvSEUsY0FBZSxLRWhIakIsZ0JBQUEsVUZvSEUsd0JBQXlCLFVBQVUsT0VoSHJDLGdCQUFBLFVBQUEsT0Z5SEEsRUFDQSxPQUNFLFlBQWEsT0FRZixLRTNHQSxJRjZHQSxLQUFFLEtBQUEsSUFBQSxTQUFBLENBQUEsVUFVRixNRXZHQSxVQUFBLElGZ0hBLElBQ0EsSUUxR3FCLFVBQUEsSUFDbkIsWUFBUyxFQUFFLFNBQU8sU0Y2R2xCLGVBQWdCLFNBR2xCLElBQUUsT0FBQSxPQUlGLElFekdFLElBQUEsTUZvSEYsSUV0R0EsYUFBQSxLRmtIQSxPRW5HQSxNRnFHQSxTQUNBLE9BQ0EsU0VuR0UsS0FBQSxJQUFBLENBQUEsS0FBQSxRRndHQSxPQUFRLEVBU1YsT0FDQSxNRTlGRSxTQUFBLFFBVUYsT0YrRkEsT0U3RkUsZUFBYyxLRnVHaEIsY0FDQSxhQUNBLGNBSEEsT0UvRkEsbUJBQUEsT0YyR0EsZ0NFL0ZBLCtCRmlHQSxnQ0FIQSx5QkFJRSxhQUFjLEtFOUZoQixRQUFBLEVGdUdBLDZCQUNBLDRCQUNBLDZCQUhBLHNCRTNGQSxRQUFBLElBQUEsT0FBQSxXQVNBLFNGOEZFLFFBQVMsTUFBTyxNQUFPLE9BVXpCLE9BQUUsV0FBQSxXRXpGQSxNQUFBLFFBR0YsUUFBQSxNRjZGRSxVQUFXLEtFeEZiLFFBQUEsRUFDOEIsWUFBQSxPRm1HOUIsU0V4RkEsZUFBQSxTRmdHQSxTQUNFLFNBQVUsS0FRWixnQkVsRkEsYUZvRkUsV0FBWSxXQUNkLFFBQUEsRUFTQSx5Q0FDQSx5Q0dqYkUsT0FBQSxLSDBiRixjQUNFLG1CSTliVyxVSmdjWCxlSTliRSxLSnNjSix5Q0FDRSxtQkkxYmUsS0FZakIsNkJBQ0UsbUJBQUEsT0p3YkEsS0l0YkUsUUNqQ0osUUFDRSxRQUFBLE1MeWVGLFFBQ0UsUU1yZUUsVU4rZUosU0FDRSxRTS9kRSxLTnNlSixTTXhkQSxRQUFBLEtDckNBLEtBQ0UsS0FBQSxJQUFBLENBQUEsSUFBQSxVQUFBLENBQUEsV0FDQSxXQUFBLFFQb2dCQSx1QkFBd0IsWVF0Z0IxQix3QkFBQSxVQUNFLGVBQUEsbUJSMGdCRixRQUNFLFFRcmdCRSxLUndnQkosMkJRcGdCSSwrQ1JxZ0JGLFFBQ0UsU1FwZ0JRLFNScWdCUixJUXBnQkUsS1JxZ0JGLEtRcGdCRSxJUnFnQkYsVVFwZ0JFLGtCUnFnQkYsUVFwZ0JFLEVSdWdCSixpQkFDRSxRUW5nQkksS1JzZ0JOLGNBQ0UsU1FsZ0JJLFNScWdCTixzQkFDRSxRUWxnQkksR1JtZ0JKLFNRbGdCSSxTUm1nQkosSVE5ZkksS1IrZkosT1F6aEJDLEVSMGhCRCxNUTVmSSxFUjZmSixLUTVmSSxFUjZmSixpQlE1ZmUsbUJSNmZmLE9RNWZJLFdSNmZKLFFRNWZJLElSZ2dCUixnREFDRSxRQUNFLFVRcmZFLE9BVUYsTUFBQSxLQU1KLFlBQ0UsUUFBQSxLQUNFLGdCQUFjLGNBRWQsWUFBQSxPUnllQSxRUXhlRSxFQUFBLEtSMmVKLGlCUWplRixRQUFBLE1BTUkseUJBQ0UsUUFBQSxNUm1lTixVQUNFLE1RcmVHLE1Sc2VILE9BQVEsTUFHVixTQUNFLFlRM2RJLElSNGRKLE1RM2RJLEtSNGRKLFlRL2RHLEtSa2VMLFlBQ0UsY0FBZSxLUy9rQmpCLFVBQUEsS0FDRSxlQUFBLE9BQ0EsWUFBQSxJVG1sQkYsWVMva0JFLFVBQUEsS1RtbEJGLFlTemxCQSxVQUFBLEtUNmxCQSxZQUNFLGNTN2tCRSxLQWpCSixZQUFBLElUZ21CRSxZUzNrQkUsSVQ4a0JKLHlCU25tQkEsWUE4QkksVUFBQSxLQUNBLFlBQUEsS0EvQkosWUFBQSxNVDJtQkEsZ0RBQ0UsWUFDRSxVU2xrQkUsS1Rta0JGLFlBQWEsTUFJakIsWUFDRSxNQUFPLHNCVW5uQlQsWUFBQSxJVnVuQkEsMkJVbm5CaUIsK0NWb25CZixNVWxuQkUsU0FBQSxTQUhELFdBQUEsTVZ3bkJDLFdVbG5CRSx1QkFHRixRQUFBLFNWaW5CQSxRVWhuQkUsS1ZpbkJGLFlVbG5CQyxTVnFuQkgsa0JBQ0UsU1U1bUJFLE1WNm1CRixJVTVtQkUsRVY2bUJGLEtVNW1CRSxFVjZtQkYsT1VobkJDLE1WaW5CRCxNVTNtQkksS0FJSixRQUFBLEdWMm1CRixzQkFDRSxNVXRtQkUsS1Z1bUJGLE9VdG1CRSxLVnVtQkYsY1V0bUJTLE1WdW1CVCxXVXRtQkUsTVZ5bUJKLDBCVWxtQkYsUUFBQSxHQUNFLFNBQUEsU0FDRSxNQUFBLEtWb21CQSxPQUFRLE1VaG1CWixLQUFBLEVBRUksSUFBQSxFQUNFLFdBQUEseURBQ0EsUUFBQSxHVm1tQkoseUJBQ0UsUVU3bEJJLEdWOGxCSixTQUFVLFNXOXBCZCxNQUFBLEtBQ0UsT0FBVSxJQUVULEtBQUEsRUFFRyxPQUFBLEVBQ0EsV0FBQSwyRFhncUJKLGFXMXBCRixRQUFBLEVBQUEsS0FFSyxZQUFBLE1BRUcsZUFBWSxNQ2hCcEIsZUFDRSxRQUFBLE1aZ3JCRix5QllqckJBLE1BUUksUUFBQSxNWjhxQkYsYVkxcUJFLFNBQUEsU0FDQSxPQUFBLE1BQ0EsZUFBYyxHWitxQmxCLGdEQUNFLGtCQUNFLFNZdHFCRSxTWnlxQkosZUFDRSxRWW5zQkosS1pvc0JJLGdCYWxzQlcsY0RGZixTQUFBLFNBcUNJLGNBQUEsRUFDQSxRQUFRLEVab3FCVix5QkFDQSwwQllocUJFLFFBQUEsS0FLRixZQUNFLFNBQUEsT1pncUJBLGNBQWUsS1k1cEJuQixNQUFBLE1aZ3FCRSx3Qll4cEJGLFFBQUEsRVo0cEJFLGNZdnBCSSxNQUFBLE9aNHBCTixRQUNFLFFZeHBCSSxhWnlwQkosUVl4cEJJLEtBQUEsS1p5cEJKLFVZdnBCMkMsS1p3cEIzQyxZWW5xQkUsSVpvcUJGLGdCWXhwQk0sS1p5cEJOLGNZeHBCTSxLWjJwQlIsY0FDRSxPWXZwQk0sUVp3cEJOLFdZdnBCTSxJWjBwQlIsWUFDRSxNWXZwQk0sS1p3cEJOLE9ZdnBCNkMsS1p3cEI3QyxhWWhyQkcsS1ppckJILGVZeHBCUSxPWjJwQlYsZUFDRSxXWW5wQk0sUVpvcEJOLE1ZbnBCTSxRWnNwQlIscUJBQ0UsV1lqcEJNLFFab3BCUixpQkFDRSxPWWpwQk0sSUFBQSxNQUFZLHFCWmtwQmxCLE1ZanBCTSxRWm9wQlIsdUJBQ0UsV1locEJRLFFaaXBCUixNWWhwQlEsUVptcEJWLDJCQUNFLEtZem9CTSxRWjRvQlIscUJjdndCRSxLQUFBLFFkMndCRix5QkFDRSxXY3Z3QkUsVUFBQSxPQUNBLE9BQUEsRUFBQSxNZDR3QkosTUFDRSxRY3R3QkUsS0FBQSxLZHl3QkosWUFDRSxRY3B3QkUsS2Rxd0JGLGVjcHdCRSxPZHF3QkYsY2Nwd0JZLEtkdXdCZCx1QkFDRSxjY2x3QkUsS2Rxd0JKLGlCQUNFLGFjendCQyxLQWdCSCxxQkFDRSxNQUFBLEtkNnZCQSxPYzV2QkUsS2QrdkJKLG1CY3Z2QkEsUUFBQSxLQUVJLFlBQUEsT2R3dkJGLGNjdnZCaUIsS2QwdkJuQiw0QkFDRSxNY3B2QkUsTWR1dkJKLG9CQUNFLFljanZCWSxLZGt2QlosTWNqdkJJLHNCZG92Qk4sa0JlenpCRSxTQUFBLFNBRUEsT0FBQSxNZjB6QkEsS2V6ekJFLEVmMHpCRixVZXp6QkUsS0FHRixZQUFBLEtmd3pCQSxNZXZ6QkUsUWYwekJKLHlCQUNFLE1laHpCQSxpQkFBQSxxQmZxekJGLDBCQUNFLFVBQ0UsUWV2ekJGLEtmd3pCRSxVZWp6QkUsS2ZvekJKLFlBQ0UsTWVoekJFLElmbXpCSixvQkFDRSxVZTV5QkUsT2ZnekJOLFFBQ0UsUWUxeUJJLEVmNnlCTixtQkFDRSxNZXR5QkksTWZ1eUJKLE9ldHlCSSxNQUdGLGNBQUEsTWZxeUJGLFdlcHlCSSxNZnV5Qk4saURBQ0UsbUJBQ0UsTWVueUJJLE1BUEgsT0FBQSxPZit5QkwsU0FDRSxRZTd4QkUsS0FHRixZQUFBLE9mNHhCQSxnQmUzeEJhLGNmNHhCYixTZTN4QkUsU2Y0eEJGLE1lM3hCRSxJZjh4QkosV0FDRSxTZWx5QkMsU2ZteUJELFdldHhCSSxJZnV4QkosUWVweUJDLEtmcXlCRCxNZXJ4Qk0sS2ZzeEJOLE9ldHlCQyxLZnV5QkQsV2VueEJNLFdmb3hCTixRZWh4QkUsTWZpeEJGLEtlaHhCSSxFQUFBLEVBQUEsS2ZteEJOLHFCQUNFLE1lcnhCRyxLZnN4QkgsT2U5d0JNLEtBT1Isb0JBSUksV0FBQSxRZnd3QkYsUWV2d0JJLEtmd3dCSixjQUFlLEllbndCakIsWUFBQSxLZnV3QkEsd0JBQ0UsS2Vud0JJLFFmc3dCTixhQUNFLFNlbndCSSxTZm93QkosSWVud0JJLElmb3dCSixLZW53QkksSWZvd0JKLFVlandCRSxxQmZrd0JGLE1landCSSxLZmt3QkosT2U5dkJJLEtmK3ZCSixRZTl2Qk0sTWYrdkJOLEtlaHdCSyxZZml3QkwsV2U3dkJRLElBQUEsSWZnd0JWLGdCZXR2QkEsUUFBQSxLZjB2QkEseUJBQ0UsOEJBQ0UsYWV0dkJFLE1mMHZCTixnREFDRSxnQkFDRSxRZWx2QkUsTWZtdkJGLFNlbHZCRSxTQUdELEtBQUEsTWZpdkJELEllL3VCSSxLQUZILFdBQUEsS2ZtdkJELE1lNXVCTSxNZjZ1Qk4sUWU1dUJNLEtBQVMsS0FBQSxLQUFBLEtmNnVCZixpQmUzdUJLLGtCZjR1QkwsY0FBZSxLQUduQixpRkFDSSxnQkFDRSxpQkFBa0Isa0JBQ2xCLHdCQUF5QixXQUN6QixnQkFBaUIsWUFJckIsd0JBQ0UsUUFBUyxHQUNULFNBQVUsU0FDVixJQUFLLEtBQ0wsTUFBTyxLQUNQLGFBQWMsTUFDZCxhQUFjLEVBQUUsSUFBSSxJQUFJLElBQ3hCLGFBQWMsWUFBWSxZQUFZLGtCQUFzQixZQUdoRSxpRkFDSSx3QkFDRSxhQUFjLFlBQVksWUFBWSxrQkFBc0IsYUFJaEUseUJBQ0UsTUFBTyxRQUdULDRCQUNFLE1BQU8sS0FDUCxZQUFhLElBR2Ysc0JBQ0UsU0FBVSxTQUNWLE1BQU8sS0FDUCxPQUFRLEtBQ1IsSUFBSyxLQUNMLE1BQU8sS0FDUCxXQUFZLElBQ1osT0FBUSxLQUNSLE9BQVEsUUFHViwwQkFDRSxRQUFTLEdBQ1QsT0FBUSxLQUNSLE1BQU8sS0FDUCxPQUFRLEtBR1YsZ0NBQ0UsUUFBUyxFQUdYLG9CQUNFLFFBQVMsY0FJYixRQUNFLFNBQVUsU0FHWixlQUNFLFdBQVksSUFDWixTQUFVLE9BQ1YsT0FBUSxFQUNSLEtBQU0sRUFDTixRQUFTLEtBQUssS0FDZCxjQUFlLEtBQUssS0FBSyxFQUFFLEVBQzNCLFFBQVMsRUFDVCxXQUFZLFFBR2QsWUFDRSxXQUFZLE1BQ1osUUFBUyxFQUFFLEtBQUssS0FHbEIsY0FDRSxTQUFVLFNBQ1YsSUFBSyxNQUNMLEtBQU0sSUFDTixVQUFXLGtCQUNYLFFBQVMsRUFHWCxpQkFDRSxTQUFVLFNBQ1YsUUFBUyxLQUNULGdCQUFpQixjQUNqQixRQUFTLEVBR1gsaUNBQ0UsUUFBUyxlQUdYLDBCQUNFLGdCQUFpQixTQUduQix5QkFDRSxRQUNFLGlCQUFrQixvQkFHcEIsZUFDRSxpQkFBa0IsU0FJdEIsZ0RBQ0UsZUFDRSxRQUFTLE1BSWIsaURBQ0UsUUFDRSxRQUFTLEtBQUssRUFBRSxLQUdsQixZQUNFLFdBQVksS0FHZCxjQUNFLElBQUssSUFDTCxPQUFRLE9BSVosT0FDRSxTQUFVLFNBQ1YsV0FBWSxNQUdkLFdBQ0UsU0FBVSxTQUNWLFFBQVMsRUFBRSxLQUdiLGlCQUNFLGNBQWUsS0FHakIsMkJBQ0UsY0FBZSxLQUdqQixtQkFDRSxVQUFXLE1BR2IsYUFDRSxXQUFZLGtCQUNaLGNBQWUsS0FDZixRQUFTLEtBQ1QsY0FBZSxLQUdqQixpRkFDRSxhQUNFLGlCQUFrQixrQkFDbEIsd0JBQXlCLFdBQ3pCLGdCQUFpQixZQUlyQixzQkFDRSxjQUFlLElBR2pCLHlCQUNFLE1BQU8sc0JBR1QseUJBQ0UsY0FBZSxLQUdqQixrQkFDRSxVQUFXLEtBQ1gsWUFBYSxLQUNiLFlBQWEsSUFDYixNQUFPLFFBR1QsZ0JBQ0UsUUFBUyxLQUNULGdCQUFpQixjQUNqQixVQUFXLEtBQ1gsT0FBUSxLQUFLLEVBQUUsS0FHakIsa0JBQ0UsT0FBUSxFQUFFLEtBQUssS0FBSyxFQUd0Qix1QkFDRSxRQUFTLGFBQ1QsY0FBZSxLQUNmLE1BQU8sS0FDUCxXQUFZLElBQUksTUFBTSxRQUd4QixvQkFDRSxVQUFXLEtBQ1gsWUFBYSxJQUNiLE1BQU8sc0JBR1QsZ0JBQ0UsV0FBWSxLQUdkLGFBQ0UsV0FBWSw0REFDWixLQUFNLEVBQUUsRUFBRSxFQUNWLFNBQVUsU0FDVixjQUFlLEtBQ2YsUUFBUyxLQUNULGNBQWUsS0FHakIsaUJBQ0UsTUFBTyxLQUdULDRCQUNFLFVBQVcsTUFHYixzQkFDRSxVQUFXLE1BR2IsbUJBQ0UsV0FBWSxNQUdkLHFCQUNFLE1BQU8sc0JBQ1AsWUFBYSxJQUdmLHdCQUNFLE1BQU8sS0FDUCxZQUFhLElBR2YseUJBQ0Usa0JBQ0UsVUFBVyxPQUlmLGdEQUNFLE9BQ0UsZUFBZ0IsS0FHbEIsY0FDRSxRQUFTLEdBQ1QsU0FBVSxTQUNWLEtBQU0sRUFDTixPQUFRLEVBQ1IsTUFBTyxLQUNQLE9BQVEsS0FDUixXQUFZLHFCQUF1QixTQUdyQyxpQkFDRSxRQUFTLEtBR1gsbUJBQ0UsVUFBVyxLQUdiLHFCQUNFLFlBQWEsS0FHZix3QkFDRSxZQUFhLE1BSWpCLGlEQUNFLE9BQ0UsV0FBWSxNQUdkLGFBQ0UsVUFBVyxNQUNYLFNBQVUsU0FDVixJQUFLLE9BQ0wsTUFBTyxLQUdULGFBQ0UsY0FBZSxNQUdqQixnQkFDRSxRQUFTLEtBQ1QsY0FBZSxLQUdqQix5QkFDRSxhQUFjLEtBR2hCLHNCQUNFLFNBQVUsU0FDVixPQUFRLEVBQ1IsS0FBTSIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXG4gICB2Mi4wIHwgMjAxMTAxMjZcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXG4qL1xuaHRtbCxcbmJvZHksXG5kaXYsXG5zcGFuLFxuYXBwbGV0LFxub2JqZWN0LFxuaWZyYW1lLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hLFxuYWJicixcbmFjcm9ueW0sXG5hZGRyZXNzLFxuYmlnLFxuY2l0ZSxcbmNvZGUsXG5kZWwsXG5kZm4sXG5lbSxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCxcbmFydGljbGUsXG5hc2lkZSxcbmNhbnZhcyxcbmRldGFpbHMsXG5lbWJlZCxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxub3V0cHV0LFxucnVieSxcbnNlY3Rpb24sXG5zdW1tYXJ5LFxudGltZSxcbm1hcmssXG5hdWRpbyxcbnZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udDogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cblxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuYmxvY2txdW90ZSxcbnEge1xuICBxdW90ZXM6IG5vbmU7IH1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGNvbnRlbnQ6IG5vbmU7IH1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT0nYnV0dG9uJ10sXG5bdHlwZT0ncmVzZXQnXSxcblt0eXBlPSdzdWJtaXQnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9J2J1dHRvbiddOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9J3Jlc2V0J106Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0nc3VibWl0J106Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPSdidXR0b24nXTotbW96LWZvY3VzcmluZyxcblt0eXBlPSdyZXNldCddOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J3N1Ym1pdCddOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPSdjaGVja2JveCddLFxuW3R5cGU9J3JhZGlvJ10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9J251bWJlciddOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9J251bWJlciddOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9J3NlYXJjaCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTWFpbiBzdHlsZXMgKi9cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExYjJkO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7IH1cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMDAwcHgpLCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgYW5kIChtYXgtaGVpZ2h0OiA1NzVweCkge1xuICAuaGVhZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAzNXB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgICB6LWluZGV4OiAxOyB9XG4gICAgLmhlYWRlcl9fc29jaWFscyB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLmhlYWRlcl9fbG9nbyB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIC5oZWFkZXJfX2xvZ286OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA0MHB4O1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1LCA1MywgMTAyLCAwLjQpO1xuICAgICAgICBmaWx0ZXI6IGJsdXIoNDBweCk7XG4gICAgICAgIHotaW5kZXg6IC0xOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5oZWFkZXIge1xuICAgIG1heC13aWR0aDogMTE0MHB4O1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLmhlYWRlcl9faW4ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAwIDI1cHg7IH1cbiAgICAuaGVhZGVyX19zb2NpYWxzIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICAuaGVhZGVyX19zb2NpYWxzIC5idXR0b24ge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmxvZ28gc3ZnIHtcbiAgd2lkdGg6IDEyMHB4O1xuICBoZWlnaHQ6IDEyMHB4OyB9XG5cbi5oZWFkaW5nIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6IHdoaXRlO1xuICBsaW5lLWhlaWdodDogMS4zMzsgfVxuICAuaGVhZGluZ19oMSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBmb250LXNpemU6IDQ4cHg7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAzZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTsgfVxuICAuaGVhZGluZ19oMiB7XG4gICAgZm9udC1zaXplOiAzMnB4OyB9XG4gIC5oZWFkaW5nX2gzIHtcbiAgICBmb250LXNpemU6IDI0cHg7IH1cbiAgLmhlYWRpbmdfaDQge1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBsaW5lLWhlaWdodDogMS41OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MjVweCkge1xuICAuaGVhZGluZ19oMSB7XG4gICAgZm9udC1zaXplOiAzNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjMzOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5oZWFkaW5nX2gxIHtcbiAgICBmb250LXNpemU6IDcycHg7XG4gICAgbGluZS1oZWlnaHQ6IDcycHg7IH0gfVxuXG4uc3ViaGVhZGluZyB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpO1xuICBmb250LXdlaWdodDogNTAwOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDAwMHB4KSwgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIGFuZCAobWF4LWhlaWdodDogNTc1cHgpIHtcbiAgLmhlcm8ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBtaW4taGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAgIC5oZXJvX19iYWNrZ3JvdW5kIHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB6LWluZGV4OiAtMTsgfVxuICAgICAgLmhlcm9fX2JhY2tncm91bmQgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7IH1cbiAgICAgIC5oZXJvX19iYWNrZ3JvdW5kOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDI3MHB4O1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICMyNjU0YTggMCUsIHJnYmEoMzAsIDgyLCAxNjMsIDApIDEwMCUpO1xuICAgICAgICBvcGFjaXR5OiAwLjY7IH1cbiAgICAgIC5oZXJvX19iYWNrZ3JvdW5kOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogODAlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCAjMTExYjJkZTggMzAlLCByZ2JhKDEyLCA1NSwgMTIxLCAwKSAxMDAlKTsgfVxuICAgIC5oZXJvX19pbm5lciB7XG4gICAgICBwYWRkaW5nOiAwIDI1cHg7XG4gICAgICBwYWRkaW5nLXRvcDogMTcwcHg7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTEwcHg7IH1cbiAgICAuaGVyb19fc29jaWFscyB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC5oZXJvIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5oZXJvX19pbm5lciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDE4MHB4O1xuICAgICAgcGFkZGluZy1ib3R0b206IDA7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcbiAgLmhlcm9fX2JhY2tncm91bmQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaGVyb19fc29jaWFscyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgei1pbmRleDogMTsgfVxuICAgIC5oZXJvX19zb2NpYWxzIC5mYWNlYm9vayxcbiAgICAuaGVyb19fc29jaWFscyAuaW5zdGFncmFtIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmhlcm9fX3RleHQge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgICB3aWR0aDogMzYwcHg7IH1cbiAgICAuaGVyb19fdGV4dCAuc3ViaGVhZGluZyB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLmhlcm9fX3RleHQgcCB7XG4gICAgICB3aWR0aDogMzA1cHg7IH0gfVxuXG4uYnV0dG9uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiAxNnB4IDI0cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAzMHB4OyB9XG4gIC5idXR0b246aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiAwLjJzOyB9XG4gIC5idXR0b24gc3ZnIHtcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgLmJ1dHRvbi5udW1iZXIge1xuICAgIGNvbG9yOiAjMTExYjJkO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmM3MDA7IH1cbiAgICAuYnV0dG9uLm51bWJlcjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2M5ZjAwOyB9XG4gIC5idXR0b24udGVsZWdyYW0ge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcbiAgICBjb2xvcjogI2ZmYzcwMDsgfVxuICAgIC5idXR0b24udGVsZWdyYW06aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzcwMDtcbiAgICAgIGNvbG9yOiAjMTExYjJkOyB9XG4gICAgICAuYnV0dG9uLnRlbGVncmFtOmhvdmVyIHN2ZyB7XG4gICAgICAgIGZpbGw6ICMxMTFiMmQ7IH1cbiAgICAuYnV0dG9uLnRlbGVncmFtIHN2ZyB7XG4gICAgICBmaWxsOiAjZmZjNzAwOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYmxvY2tfX2luIHtcbiAgICBtYXgtd2lkdGg6IDExNDBweDtcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG5cbi5ncmlkIHtcbiAgcGFkZGluZzogODBweCAyNXB4OyB9XG4gIC5ncmlkX19pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDsgfVxuICAgIC5ncmlkX19pdGVtOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuICAgIC5ncmlkX19pdGVtLWljb24ge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG4gICAgICAuZ3JpZF9faXRlbS1pY29uIHN2ZyB7XG4gICAgICAgIHdpZHRoOiA2NHB4O1xuICAgICAgICBoZWlnaHQ6IDY0cHg7IH1cbiAgICAuZ3JpZF9faXRlbS1oZWFkZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxNXB4OyB9XG4gICAgICAuZ3JpZF9faXRlbS1oZWFkZXIgPiAuaGVhZGluZyB7XG4gICAgICAgIHdpZHRoOiAxODBweDsgfVxuICAgIC5ncmlkX19pdGVtLWNvbnRlbnQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDg0cHg7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KTsgfVxuICAgIC5ncmlkX19pdGVtLXByaWNlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogLTM1cHg7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDMycHg7XG4gICAgICBjb2xvcjogI2ZmYzcwMDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmdyaWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYsIDExMiwgMjAxLCAwLjEpOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuZ3JpZF9faW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwOyB9XG4gIC5ncmlkX19pdGVtIHtcbiAgICB3aWR0aDogMzMlOyB9XG4gICAgLmdyaWRfX2l0ZW0tY29udGVudCB7XG4gICAgICBtYXgtd2lkdGg6IDI1NXB4OyB9IH1cblxuLnNwbGlkZSB7XG4gIHotaW5kZXg6IDE7IH1cbiAgLnNwbGlkZV9fc2xpZGUgaW1nIHtcbiAgICB3aWR0aDogMTU1cHg7XG4gICAgaGVpZ2h0OiAxNTVweDtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5zcGxpZGVfX3NsaWRlIGltZyB7XG4gICAgd2lkdGg6IDI3MnB4O1xuICAgIGhlaWdodDogMjcycHg7IH0gfVxuXG4uc29jaWFscyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMzMlOyB9XG4gIC5zb2NpYWxzIGEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiAwLjJzO1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgd2lkdGg6IDU2cHg7XG4gICAgaGVpZ2h0OiA1NnB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxleDogMCAwIGF1dG87IH1cbiAgICAuc29jaWFscyBhOmhvdmVyIHN2ZyB7XG4gICAgICB3aWR0aDogMjZweDtcbiAgICAgIGhlaWdodDogMjZweDsgfVxuICAgIC5zb2NpYWxzIGEudGVsZWdyYW0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzcwMDsgfVxuICAgICAgLnNvY2lhbHMgYS50ZWxlZ3JhbSBzdmcge1xuICAgICAgICBmaWxsOiAjMTExYjJkOyB9XG4gIC5zb2NpYWxzIHN2ZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4yczsgfVxuICAuc29jaWFsc19fcG9wdXAge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zb2NpYWxzIGE6bm90KDpsYXN0LW9mLXR5cGUpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcbiAgLnNvY2lhbHNfX3BvcHVwIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTUwcHg7XG4gICAgdG9wOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgd2lkdGg6IDIwNXB4O1xuICAgIHBhZGRpbmc6IDI0cHggMzJweCAyNHB4IDI0cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNywgMzYsIDYxLCAwLjcpO1xuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7IH1cbiAgICBAc3VwcG9ydHMgKGJhY2tkcm9wLWZpbHRlcjogYmx1cig2MHB4KSkge1xuICAgICAgLnNvY2lhbHNfX3BvcHVwIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNywgMzYsIDYxLCAwLjYpO1xuICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCk7IH0gfVxuICAgIC5zb2NpYWxzX19wb3B1cDo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC04cHg7XG4gICAgICByaWdodDogMjBweDtcbiAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICBib3JkZXItd2lkdGg6IDAgOHB4IDhweCA4cHg7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYmEoMTcsIDM2LCA2MSwgMC43KSB0cmFuc3BhcmVudDsgfVxuICAgICAgQHN1cHBvcnRzIChiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCkpIHtcbiAgICAgICAgLnNvY2lhbHNfX3BvcHVwOjpiZWZvcmUge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgcmdiYSgxNywgMzYsIDYxLCAwLjYpIHRyYW5zcGFyZW50OyB9IH1cbiAgICAuc29jaWFsc19fcG9wdXAgLmhlYWRpbmcge1xuICAgICAgY29sb3I6ICNmZmM3MDA7IH1cbiAgICAuc29jaWFsc19fcG9wdXAgLnN1YmhlYWRpbmcge1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuICAgIC5zb2NpYWxzX19wb3B1cC1jbG9zZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMzVweDtcbiAgICAgIGhlaWdodDogMzVweDtcbiAgICAgIHRvcDogMjBweDtcbiAgICAgIHJpZ2h0OiAxOHB4O1xuICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICAgLnNvY2lhbHNfX3BvcHVwLWNsb3NlIHN2ZyB7XG4gICAgICAgIG9wYWNpdHk6IDAuNDtcbiAgICAgICAgc3Ryb2tlOiB3aGl0ZTtcbiAgICAgICAgd2lkdGg6IDE2cHg7XG4gICAgICAgIGhlaWdodDogMTZweDsgfVxuICAgICAgLnNvY2lhbHNfX3BvcHVwLWNsb3NlOmhvdmVyIHN2ZyB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgLnNvY2lhbHMgYS50ZWxlZ3JhbSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9IH1cblxuLmZvb3RlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuZm9vdGVyX3N0aWNreSB7XG4gICAgcG9zaXRpb246IHN0aWNreTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICBwYWRkaW5nOiAxMHB4IDI1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogMzBweCAzMHB4IDAgMDtcbiAgICB6LWluZGV4OiA1O1xuICAgIGJhY2tncm91bmQ6ICMyZjNlNTM7IH1cbiAgLmZvb3Rlcl9faW4ge1xuICAgIG1hcmdpbi10b3A6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDAgMjVweCAyMHB4OyB9XG4gIC5mb290ZXJfX2xvZ28ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDIwMHB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgICB6LWluZGV4OiAyOyB9XG4gIC5mb290ZXJfX3NvY2lhbHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICB6LWluZGV4OiAxOyB9XG4gICAgLmZvb3Rlcl9fc29jaWFscyAuc29jaWFsc19fcG9wdXAge1xuICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG4gICAgLmZvb3Rlcl9fc29jaWFscyAuc29jaWFscyB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MjVweCkge1xuICAuZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2LCAxMTIsIDIwMSwgMC4xKTsgfVxuICAgIC5mb290ZXJfc3RpY2t5IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyZjNlNTM7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcbiAgLmZvb3Rlcl9zdGlja3kge1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmc6IDE1cHggMCA3MHB4OyB9XG4gICAgLmZvb3Rlcl9faW4ge1xuICAgICAgbWFyZ2luLXRvcDogODBweDsgfVxuICAgIC5mb290ZXJfX2xvZ28ge1xuICAgICAgdG9wOiA2NyU7XG4gICAgICBib3R0b206IHVuc2V0OyB9IH1cblxuLnByb21vIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tdG9wOiAtMzBweDsgfVxuICAucHJvbW9fX2luIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMCAyNXB4OyB9XG4gIC5wcm9tb19fdGVsZWdyYW0ge1xuICAgIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cbiAgICAucHJvbW9fX3RlbGVncmFtIC50ZWxlZ3JhbSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG4gICAgLnByb21vX190ZWxlZ3JhbSBwIHtcbiAgICAgIG1heC13aWR0aDogNDYwcHg7IH1cbiAgLnByb21vX19jYXJkIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICAgIHBhZGRpbmc6IDMycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNywgMzYsIDYxLCAwLjkpO1xuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7IH1cbiAgICBAc3VwcG9ydHMgKGJhY2tkcm9wLWZpbHRlcjogYmx1cig2MHB4KSkge1xuICAgICAgLnByb21vX19jYXJkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNywgMzYsIDYxLCAwLjYpO1xuICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCk7IH0gfVxuICAgIC5wcm9tb19fY2FyZCAuaGVhZGluZyB7XG4gICAgICBtYXJnaW4tYm90dG9tOiA4cHg7IH1cbiAgICAucHJvbW9fX2NhcmQgLmhlYWRpbmdfaDMge1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43NSk7IH1cbiAgICAucHJvbW9fX2NhcmQgLnN1YmhlYWRpbmcge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMzJweDsgfVxuICAgIC5wcm9tb19fY2FyZCBzcGFuIHtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgIGNvbG9yOiAjZmZjNzAwOyB9XG4gIC5wcm9tb19fbGlzdCB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG1hcmdpbjogMzJweCAwIDQwcHg7IH1cbiAgLnByb21vX19saXN0LWl0ZW0ge1xuICAgIG1hcmdpbjogMCAyMHB4IDMycHggMDsgfVxuICAgIC5wcm9tb19fbGlzdC1pdGVtIHNwYW4ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICM1YWQ5ZDE7IH1cbiAgICAucHJvbW9fX2xpc3QtaXRlbSBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KTsgfVxuICAucHJvbW9fX3ZlaGljbGUge1xuICAgIG1hcmdpbi10b3A6IDM1cHg7IH1cbiAgLnByb21vX19pdGVtIHtcbiAgICBmbGV4OiAxIDEgMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVhci1ncmFkaWVudCg3MS45MmRlZywgIzVhZDlkMSAwJSwgcmdiYSg5MCwgMjE3LCAyMDksIDApIDEwMCUpO1xuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7IH1cbiAgICAucHJvbW9fX2l0ZW0gaW1nIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAucHJvbW9fX2l0ZW0gaW1nLmh5ZHJvY3ljbGUge1xuICAgICAgICBtYXgtd2lkdGg6IDQ3MHB4OyB9XG4gICAgICAucHJvbW9fX2l0ZW0gaW1nLmJvYXQge1xuICAgICAgICBtYXgtd2lkdGg6IDU4NXB4OyB9XG4gICAgLnByb21vX19pdGVtLXRpdGxlIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgICAucHJvbW9fX2l0ZW0tdGl0bGUgcCB7XG4gICAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpO1xuICAgICAgICBmb250LXdlaWdodDogNTAwOyB9XG4gICAgICAucHJvbW9fX2l0ZW0tdGl0bGUgc3BhbiB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgLnByb21vX19saXN0LWl0ZW0ge1xuICAgIG1heC13aWR0aDogMjAwcHg7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcbiAgLnByb21vIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogODBweDsgfVxuICAgIC5wcm9tbzo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy93YXZlLnBuZ1wiKSByZXBlYXQteDsgfVxuICAgIC5wcm9tb19fdGVsZWdyYW0ge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5wcm9tb19faXRlbS10aXRsZSB7XG4gICAgICBmb250LXNpemU6IDI0cHg7IH1cbiAgICAgIC5wcm9tb19faXRlbS10aXRsZSBwIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDMycHg7IH1cbiAgICAgIC5wcm9tb19faXRlbS10aXRsZSBzcGFuIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5wcm9tbyB7XG4gICAgbWFyZ2luLXRvcDogMTEwcHg7IH1cbiAgICAucHJvbW9fX2NhcmQge1xuICAgICAgbWF4LXdpZHRoOiA0NjBweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogLTM1MHB4O1xuICAgICAgcmlnaHQ6IDU1cHg7IH1cbiAgICAucHJvbW9fX2xpc3Qge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTQwcHg7IH1cbiAgICAucHJvbW9fX3ZlaGljbGUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cbiAgICAucHJvbW9fX2l0ZW06Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XG4gICAgLnByb21vX19pdGVtIGltZy5ib2F0IHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IC03MHB4OyB9IH1cbiIsIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cblxuaHRtbCxcbmJvZHksXG5kaXYsXG5zcGFuLFxuYXBwbGV0LFxub2JqZWN0LFxuaWZyYW1lLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hLFxuYWJicixcbmFjcm9ueW0sXG5hZGRyZXNzLFxuYmlnLFxuY2l0ZSxcbmNvZGUsXG5kZWwsXG5kZm4sXG5lbSxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCxcbmFydGljbGUsXG5hc2lkZSxcbmNhbnZhcyxcbmRldGFpbHMsXG5lbWJlZCxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxub3V0cHV0LFxucnVieSxcbnNlY3Rpb24sXG5zdW1tYXJ5LFxudGltZSxcbm1hcmssXG5hdWRpbyxcbnZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udDogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cbmJsb2NrcXVvdGU6YmVmb3JlLFxuYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLFxucTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBjb250ZW50OiBub25lO1xufVxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cbiIsIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICAvLyBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPSdidXR0b24nXSxcblt0eXBlPSdyZXNldCddLFxuW3R5cGU9J3N1Ym1pdCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0nYnV0dG9uJ106Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0ncmVzZXQnXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPSdzdWJtaXQnXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J2J1dHRvbiddOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J3Jlc2V0J106LW1vei1mb2N1c3JpbmcsXG5bdHlwZT0nc3VibWl0J106LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9J2NoZWNrYm94J10sXG5bdHlwZT0ncmFkaW8nXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT0nc2VhcmNoJ10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT0nc2VhcmNoJ106Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIE1haW4gc3R5bGVzICovXG4iLCJib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiQG1lZGlhIChtYXgtd2lkdGg6IDEwMDAwcHgpLCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgYW5kIChtYXgtaGVpZ2h0OiA1NzVweCkge1xuICAuaGVhZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAzNXB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgJl9fc29jaWFscyB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICZfX2xvZ28ge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAmOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNDBweDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNSwgNTMsIDEwMiwgMC40KTtcbiAgICAgICAgZmlsdGVyOiBibHVyKDQwcHgpO1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQpIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcbiAgLmhlYWRlciB7XG4gICAgbWF4LXdpZHRoOiAxMTQwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAmX19pbiB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDAgMjVweDtcbiAgICB9XG5cbiAgICAmX19zb2NpYWxzIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgICAmIC5idXR0b24ge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmxvZ28gc3ZnIHtcbiAgd2lkdGg6IDEyMHB4O1xuICBoZWlnaHQ6IDEyMHB4O1xufVxuIiwiLmhlYWRpbmcge1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogJHdoaXRlO1xuICBsaW5lLWhlaWdodDogMS4zMztcblxuICAmX2gxIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogNDhweDtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDNlbTtcbiAgICBsaW5lLWhlaWdodDogMS4xO1xuICB9XG5cbiAgJl9oMiB7XG4gICAgZm9udC1zaXplOiAzMnB4O1xuICB9XG5cbiAgJl9oMyB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICB9XG5cbiAgJl9oNCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6ICRtb2JpbGUpIHtcbiAgLmhlYWRpbmcge1xuICAgICZfaDEge1xuICAgICAgZm9udC1zaXplOiAzNXB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgICBsaW5lLWhlaWdodDogMS4zMztcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQpIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcbiAgLmhlYWRpbmcge1xuICAgICZfaDEge1xuICAgICAgZm9udC1zaXplOiA3MnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDcycHg7XG4gICAgfVxuICB9XG59XG4iLCIuc3ViaGVhZGluZyB7XG4gIGNvbG9yOiAkZ3JheTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbiIsIkBtZWRpYSAobWF4LXdpZHRoOiAxMDAwMHB4KSwgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIGFuZCAobWF4LWhlaWdodDogNTc1cHgpIHtcbiAgLmhlcm8ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBtaW4taGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlO1xuICAgIC8vIGhlaWdodDogY2FsYyh2YXIoLS12aCwgMXZoKSAqIDEwMCk7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuXG4gICAgJl9fYmFja2dyb3VuZCB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgei1pbmRleDogLTE7XG5cbiAgICAgICYgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICB9XG5cbiAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMjcwcHg7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgICAgICAgIDE4MGRlZyxcbiAgICAgICAgICAjMjY1NGE4IDAlLFxuICAgICAgICAgIHJnYmEoMzAsIDgyLCAxNjMsIDApIDEwMCVcbiAgICAgICAgKTtcbiAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgfVxuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogODAlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcbiAgICAgICAgICAwZGVnLFxuICAgICAgICAgICMxMTFiMmRlOCAzMCUsXG4gICAgICAgICAgcmdiYSgxMiwgNTUsIDEyMSwgMCkgMTAwJVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2lubmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgMjVweDtcbiAgICAgIHBhZGRpbmctdG9wOiAxNzBweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMTBweDtcbiAgICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIC8vIGJvdHRvbTogMzIwcHg7XG4gICAgfVxuXG4gICAgLy8gJl9fdGV4dCB7XG4gICAgLy8gICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgLy8gICB0b3A6IDEwMHB4O1xuICAgIC8vIH1cblxuICAgICZfX3NvY2lhbHMge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRtb2JpbGUpIHtcbiAgLmhlcm8ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgJl9faW5uZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAxODBweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIH1cbiAgICAvLyAmX190ZXh0IHtcbiAgICAvLyAgIHRvcDogMTQwcHg7XG4gICAgLy8gfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5oZXJvIHtcbiAgICAmX19iYWNrZ3JvdW5kIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAmX19zb2NpYWxzIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgei1pbmRleDogMTtcblxuICAgICAgJiAuZmFjZWJvb2ssXG4gICAgICAmIC5pbnN0YWdyYW0ge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX3RleHQge1xuICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAgICB3aWR0aDogMzYwcHg7XG5cbiAgICAgIC5zdWJoZWFkaW5nIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cblxuICAgICAgJiBwIHtcbiAgICAgICAgd2lkdGg6IDMwNXB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmJ1dHRvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMTZweCAyNHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcblxuICAmOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogMC4ycztcbiAgfVxuXG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH1cblxuICAmLm51bWJlciB7XG4gICAgY29sb3I6ICRibGFjaztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeWVsbG93O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJHllbGxvdywgMTAlKTtcbiAgICB9XG4gIH1cblxuICAmLnRlbGVncmFtIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKCR3aGl0ZSwgMC4yKTtcbiAgICBjb2xvcjogJHllbGxvdztcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHllbGxvdztcbiAgICAgIGNvbG9yOiAkYmxhY2s7XG5cbiAgICAgICYgc3ZnIHtcbiAgICAgICAgZmlsbDogJGJsYWNrO1xuICAgICAgfVxuICAgIH1cblxuICAgICYgc3ZnIHtcbiAgICAgIGZpbGw6ICR5ZWxsb3c7XG4gICAgfVxuICB9XG59XG4iLCIuZ3JpZCB7XG4gIHBhZGRpbmc6IDgwcHggMjVweDtcblxuICAmX19pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgIH1cblxuICAgICYtaWNvbiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG5cbiAgICAgICYgc3ZnIHtcbiAgICAgICAgd2lkdGg6IDY0cHg7XG4gICAgICAgIGhlaWdodDogNjRweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLWhlYWRlciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG5cbiAgICAgICYgPiAuaGVhZGluZyB7XG4gICAgICAgIHdpZHRoOiAxODBweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLWNvbnRlbnQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDg0cHg7XG4gICAgICBjb2xvcjogJGdyYXk7XG4gICAgfVxuXG4gICAgJi1wcmljZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IC0zNXB4O1xuICAgICAgbGVmdDogMDtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICAgICAgY29sb3I6ICR5ZWxsb3c7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSB7XG4gIC5ncmlkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcbiAgLmdyaWQge1xuICAgICZfX2luIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICB3aWR0aDogMzMlO1xuXG4gICAgICAmLWNvbnRlbnQge1xuICAgICAgICBtYXgtd2lkdGg6IDI1NXB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLnNwbGlkZSB7XG4gIHotaW5kZXg6IDE7XG5cbiAgJl9fc2xpZGUge1xuICAgICYgaW1nIHtcbiAgICAgIHdpZHRoOiAxNTVweDtcbiAgICAgIGhlaWdodDogMTU1cHg7XG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5zcGxpZGUge1xuICAgICZfX3NsaWRlIHtcbiAgICAgICYgaW1nIHtcbiAgICAgICAgd2lkdGg6IDI3MnB4O1xuICAgICAgICBoZWlnaHQ6IDI3MnB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLnNvY2lhbHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDMzJTtcblxuICAmIGEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiAwLjJzO1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgd2lkdGg6IDU2cHg7XG4gICAgaGVpZ2h0OiA1NnB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxleDogMCAwIGF1dG87XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICYgc3ZnIHtcbiAgICAgICAgd2lkdGg6IDI2cHg7XG4gICAgICAgIGhlaWdodDogMjZweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLnRlbGVncmFtIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMTVweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR5ZWxsb3c7XG5cbiAgICAgICYgc3ZnIHtcbiAgICAgICAgZmlsbDogJGJsYWNrO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYgc3ZnIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzO1xuICB9XG5cbiAgJl9fcG9wdXAge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQpIHtcbiAgLnNvY2lhbHMge1xuICAgICYgYTpub3QoOmxhc3Qtb2YtdHlwZSkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xuICAuc29jaWFscyB7XG4gICAgJl9fcG9wdXAge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAtNTBweDtcbiAgICAgIHRvcDogMTAwJTtcbiAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICB3aWR0aDogMjA1cHg7XG4gICAgICBwYWRkaW5nOiAyNHB4IDMycHggMjRweCAyNHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgjMTEyNDNkLCAwLjcpO1xuICAgICAgYm9yZGVyLXJhZGl1czogMTZweDtcblxuICAgICAgQHN1cHBvcnRzIChiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCkpIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgjMTEyNDNkLCAwLjYpO1xuICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCk7XG4gICAgICB9XG5cbiAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAtOHB4O1xuICAgICAgICByaWdodDogMjBweDtcbiAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgYm9yZGVyLXdpZHRoOiAwIDhweCA4cHggOHB4O1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYmEoIzExMjQzZCwgMC43KSB0cmFuc3BhcmVudDtcbiAgICAgICAgQHN1cHBvcnRzIChiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCkpIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYmEoIzExMjQzZCwgMC42KSB0cmFuc3BhcmVudDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmIC5oZWFkaW5nIHtcbiAgICAgICAgY29sb3I6ICR5ZWxsb3c7XG4gICAgICB9XG5cbiAgICAgICYgLnN1YmhlYWRpbmcge1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgfVxuXG4gICAgICAmLWNsb3NlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogMzVweDtcbiAgICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgICAgICB0b3A6IDIwcHg7XG4gICAgICAgIHJpZ2h0OiAxOHB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgICAmIHN2ZyB7XG4gICAgICAgICAgb3BhY2l0eTogMC40O1xuICAgICAgICAgIHN0cm9rZTogd2hpdGU7XG4gICAgICAgICAgd2lkdGg6IDE2cHg7XG4gICAgICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgICB9XG5cbiAgICAgICAgJjpob3ZlciBzdmcge1xuICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmIGEge1xuICAgICAgJi50ZWxlZ3JhbSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vIENvbG9yc1xuJHdoaXRlOiB3aGl0ZTtcbiRibGFjazogIzExMWIyZDtcbiRncmF5OiByZ2JhKHdoaXRlLCAwLjc1KTtcbiR5ZWxsb3c6ICNmZmM3MDA7XG4kYmx1ZTogcmdiYSgjMTA3MGM5LCAwLjEpO1xuJGdyZWVuOiAjNWFkOWQxO1xuJGdyZXk6ICMyZjNlNTM7XG5cbi8vIE1lZGlhIHF1ZXJpZXNcbiRtb2JpbGU6IDQyNXB4O1xuJHRhYmxldDogNzY4cHg7XG4kZGVza3RvcDogMTAyNHB4O1xuJGRlc2t0b3AtbGc6IDE0NDBweDtcbiIsIi5mb290ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJl9zdGlja3kge1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcGFkZGluZzogMTBweCAyNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHggMzBweCAwIDA7XG4gICAgei1pbmRleDogNTtcbiAgICBiYWNrZ3JvdW5kOiAkZ3JleTtcbiAgfVxuXG4gICZfX2luIHtcbiAgICBtYXJnaW4tdG9wOiAyMDBweDtcbiAgICBwYWRkaW5nOiAwIDI1cHggMjBweDtcbiAgfVxuXG4gICZfX2xvZ28ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDIwMHB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgICB6LWluZGV4OiAyO1xuICB9XG5cbiAgJl9fc29jaWFscyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHotaW5kZXg6IDE7XG5cbiAgICAmIC5zb2NpYWxzX19wb3B1cCB7XG4gICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgJiAuc29jaWFscyB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJG1vYmlsZSkge1xuICAuZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZTtcblxuICAgICZfc3RpY2t5IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5O1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xuICAuZm9vdGVyIHtcbiAgICAmX3N0aWNreSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZzogMTVweCAwIDcwcHg7XG5cbiAgICAmX19pbiB7XG4gICAgICBtYXJnaW4tdG9wOiA4MHB4O1xuICAgIH1cblxuICAgICZfX2xvZ28ge1xuICAgICAgdG9wOiA2NyU7XG4gICAgICBib3R0b206IHVuc2V0O1xuICAgIH1cbiAgfVxufVxuIiwiLnByb21vIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tdG9wOiAtMzBweDtcblxuICAmX19pbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDAgMjVweDtcbiAgfVxuXG4gICZfX3RlbGVncmFtIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuXG4gICAgJiAudGVsZWdyYW0ge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICB9XG5cbiAgICAmIHAge1xuICAgICAgbWF4LXdpZHRoOiA0NjBweDtcbiAgICB9XG4gIH1cblxuICAmX19jYXJkIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICAgIHBhZGRpbmc6IDMycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgjMTEyNDNkLCAwLjkpO1xuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7XG5cbiAgICBAc3VwcG9ydHMgKGJhY2tkcm9wLWZpbHRlcjogYmx1cig2MHB4KSkge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgjMTEyNDNkLCAwLjYpO1xuICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDYwcHgpO1xuICAgIH1cblxuICAgICYgLmhlYWRpbmcge1xuICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgIH1cblxuICAgICYgLmhlYWRpbmdfaDMge1xuICAgICAgY29sb3I6ICRncmF5O1xuICAgIH1cblxuICAgICYgLnN1YmhlYWRpbmcge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMzJweDtcbiAgICB9XG5cbiAgICAmIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDMycHg7XG4gICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgY29sb3I6ICR5ZWxsb3c7XG4gICAgfVxuICB9XG5cbiAgJl9fbGlzdCB7XG4gICAgJiB1bCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgbWFyZ2luOiAzMnB4IDAgNDBweDtcbiAgICB9XG5cbiAgICAmLWl0ZW0ge1xuICAgICAgbWFyZ2luOiAwIDIwcHggMzJweCAwO1xuXG4gICAgICAmIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICBib3JkZXItdG9wOiAycHggc29saWQgJGdyZWVuO1xuICAgICAgfVxuXG4gICAgICAmIHAge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIGNvbG9yOiAkZ3JheTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmX192ZWhpY2xlIHtcbiAgICBtYXJnaW4tdG9wOiAzNXB4O1xuICB9XG5cbiAgJl9faXRlbSB7XG4gICAgZmxleDogMSAxIDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgcGFkZGluZzogMzJweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgICA3MS45MmRlZyxcbiAgICAgICM1YWQ5ZDEgMCUsXG4gICAgICByZ2JhKDkwLCAyMTcsIDIwOSwgMCkgMTAwJVxuICAgICk7XG4gICAgYm9yZGVyLXJhZGl1czogMTZweDtcblxuICAgICYgaW1nIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAmLmh5ZHJvY3ljbGUge1xuICAgICAgICBtYXgtd2lkdGg6IDQ3MHB4O1xuICAgICAgfVxuXG4gICAgICAmLmJvYXQge1xuICAgICAgICBtYXgtd2lkdGg6IDU4NXB4O1xuICAgICAgfVxuICAgIH1cblxuICAgICYtdGl0bGUge1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG5cbiAgICAgICYgcCB7XG4gICAgICAgIGNvbG9yOiAkZ3JheTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIH1cbiAgICAgICYgc3BhbiB7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkbW9iaWxlKSB7XG4gIC5wcm9tbyB7XG4gICAgLy8gbWFyZ2luLXRvcDogOTBweDtcblxuICAgICZfX2xpc3QtaXRlbSB7XG4gICAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xuICAucHJvbW8ge1xuICAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy93YXZlLnBuZ1wiKSByZXBlYXQteDtcbiAgICB9XG5cbiAgICAmX190ZWxlZ3JhbSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgJi10aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcblxuICAgICAgICAmIHAge1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICAgICAgICB9XG4gICAgICAgICYgc3BhbiB7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5wcm9tbyB7XG4gICAgbWFyZ2luLXRvcDogMTEwcHg7XG5cbiAgICAmX19jYXJkIHtcbiAgICAgIG1heC13aWR0aDogNDYwcHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC0zNTBweDtcbiAgICAgIHJpZ2h0OiA1NXB4O1xuICAgIH1cblxuICAgICZfX2xpc3Qge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTQwcHg7XG4gICAgfVxuXG4gICAgJl9fdmVoaWNsZSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICB9XG5cbiAgICAmX19pdGVtIHtcbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgICB9XG5cbiAgICAgICYgaW1nIHtcbiAgICAgICAgJi5ib2F0IHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgIGxlZnQ6IC03MHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */
