a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}body{font:16px/1.5 Montserrat,sans-serif;background:#111b2d;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizeLegibility}.hidden{display:none}.header{position:absolute;top:20px;left:50%;transform:translate(-50%,0);z-index:1}@media (max-width:10000px),(orientation:landscape) and (max-height:575px){.header__socials{display:none}.header__logo{position:relative}.header__logo::before{content:"";position:absolute;top:40px;bottom:0;right:0;left:0;background-color:rgba(25,53,102,.4);filter:blur(40px);z-index:-1}}@media (min-height:490px){.header{top:35px}}@media (min-width:768px) and (min-height:575px){.header{max-width:1140px;width:100%}.header__in{display:flex;justify-content:space-between;align-items:center;padding:0 25px}.header__socials{display:block}.header__socials .button{display:none}}.logo svg{width:120px;height:120px}.logo img{width:120px}@media (max-height:490px){.logo svg{width:90px;height:90px}.logo img{width:90px}}.heading{font-weight:600;color:#fff;line-height:1.33}.heading_h1{margin-bottom:20px;font-size:48px;letter-spacing:-.03em;line-height:1.1}.heading_h2{font-size:32px}.heading_h3{font-size:24px}.heading_h4{margin-bottom:15px;font-weight:500;line-height:1.5}@media (max-width:425px){.heading_h1{font-size:35px;line-height:35px;line-height:1.33}}@media (min-width:768px) and (min-height:575px){.heading_h1{font-size:72px;line-height:72px}}.subheading{color:rgba(255,255,255,.75);font-weight:500}.hero{position:relative;min-height:100vh;min-height:-webkit-fill-available;display:-ms-flex;display:flex;align-items:flex-end}.hero__background{position:fixed;top:0;left:0;height:100vh;width:100%;z-index:-1}.hero__background img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.hero__background::before{content:"";position:absolute;width:100%;height:270px;left:0;top:0;background:linear-gradient(180deg,#2654a8 0,rgba(30,82,163,0) 100%);opacity:.6}.hero__background::after{content:"";position:absolute;width:100%;height:80%;left:0;bottom:0;background:linear-gradient(0deg,#111b2de8 30%,rgba(12,55,121,0) 100%)}.hero__inner{padding:0 25px;padding-top:120px;padding-bottom:110px}.hero__socials{display:none}@media (min-height:490px){.hero__inner{padding-top:170px}}@media (min-width:768px) and (min-height:575px){.hero__socials{display:flex;justify-content:space-between;position:relative;margin-bottom:0;z-index:1}.hero__socials .facebook,.hero__socials .instagram{display:none}.hero__text{position:static;margin-bottom:24px;width:360px}.hero__text .subheading{opacity:1}.hero__text p{width:305px}}.button{display:inline-block;padding:16px 24px;font-size:14px;font-weight:600;text-decoration:none;border-radius:30px}.button:hover{cursor:pointer;transition:.2s}.button svg{width:24px;height:24px;margin-right:10px;vertical-align:middle}.button.number{background:#ffc700;color:#111b2d}.button.number:hover{background:#cc9f00}.button.telegram{border:1px solid rgba(255,255,255,.2);color:#ffc700}.button.telegram:hover{background:#ffc700;color:#111b2d}.button.telegram:hover svg{fill:#111b2d}.button.telegram svg{fill:#ffc700}@media (min-width:768px){.block__in{max-width:1140px;margin:0 auto;flex-grow:1}}.grid{padding:80px 25px}.grid__item{display:flex;flex-direction:column;margin-bottom:50px}.grid__item:last-child{margin-bottom:30px}.grid__item-icon{margin-right:20px}.grid__item-icon svg{width:64px;height:64px}.grid__item-header{display:flex;align-items:center;margin-bottom:15px}.grid__item-header>.heading{width:180px}.grid__item-content{margin-left:84px;color:rgba(255,255,255,.75)}.grid__item-price{position:absolute;bottom:-35px;left:0;font-size:32px;line-height:32px;color:#ffc700}@media (min-width:768px){.grid{background-color:rgba(16,112,201,.1)}}@media (min-width:1024px){.grid__in{display:flex;flex-wrap:wrap}.grid__item{width:33%}.grid__item-content{max-width:255px}}.splide{z-index:1}.splide__slide img{width:155px;height:155px;-o-object-fit:cover;object-fit:cover}@media (min-width:1024px) and (min-height:575px){.splide__slide img{width:272px;height:272px}}.socials{display:flex;align-items:center;justify-content:space-between;position:relative;width:33%}.socials a{position:relative;transition:.2s;padding:16px;width:56px;height:56px;box-sizing:border-box;display:block;flex:0 0 auto}.socials a:hover svg{width:26px;height:26px}.socials a.telegram{background:#ffc700;display:none;border-radius:50%;margin-left:15px}.socials a.telegram svg{fill:#111b2d}.socials a span{font-size:0;display:none}.socials svg{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:24px;height:24px;display:block;fill:transparent;transition:all .2s}.socials__popup{display:none}@media (min-width:768px){.socials a:not(:last-of-type){margin-right:15px}}@media (min-width:768px) and (min-height:575px){.socials__popup{display:block;position:absolute;left:-50px;top:100%;margin-top:30px;width:205px;padding:24px 32px 24px 24px;background-color:rgba(17,36,61,.7);border-radius:16px}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.socials__popup{background-color:rgba(17,36,61,.6);-webkit-backdrop-filter:blur(60px);backdrop-filter:blur(60px)}}.socials__popup::before{content:"";position:absolute;top:-8px;right:20px;border-style:solid;border-width:0 8px 8px 8px;border-color:transparent transparent rgba(17,36,61,.7) transparent}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.socials__popup::before{border-color:transparent transparent rgba(17,36,61,.6) transparent}}.socials__popup .heading{color:#ffc700}.socials__popup .subheading{color:#fff;font-weight:500}.socials__popup-close{position:absolute;width:35px;height:35px;top:20px;right:18px;background:0 0;border:none;cursor:pointer}.socials__popup-close svg{opacity:.4;stroke:#fff;width:16px;height:16px}.socials__popup-close:hover svg{opacity:1}.socials a.telegram{display:inline-block}}.footer{position:relative}.footer_sticky{background:0 0;position:sticky;bottom:0;left:0;padding:10px 25px;border-radius:30px 30px 0 0;z-index:5;background:#2f3e53}.footer__in{margin-top:200px;padding:0 25px 20px}.footer__logo{position:absolute;top:200px;left:50%;transform:translate(-50%,0);z-index:2}.footer__socials{position:relative;display:flex;justify-content:space-between;z-index:1}.footer__socials .socials__popup{display:none!important}.footer__socials .socials{justify-content:flex-end}.footer_static .footer__socials{display:none}@media (min-width:425px){.footer{background-color:rgba(16,112,201,.1)}.footer_sticky{background-color:#2f3e53}.footer_static .footer__socials{display:flex}}@media (min-width:768px) and (min-height:575px){.footer_sticky{display:none}}@media (min-width:1024px) and (min-height:575px){.footer{padding:15px 0 70px}.footer__in{margin-top:80px}.footer__logo{top:67%;bottom:unset}}.promo{position:relative;margin-top:-30px}.promo__in{position:relative;padding:0 25px}.promo__telegram{margin-bottom:40px}.promo__telegram .telegram{margin-bottom:10px}.promo__telegram p{max-width:460px}.promo__card{background:rgba(17,36,61,.9);margin-bottom:40px;padding:32px;border-radius:16px}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.promo__card{background-color:rgba(17,36,61,.6);-webkit-backdrop-filter:blur(60px);backdrop-filter:blur(60px)}}.promo__card .heading{margin-bottom:8px}.promo__card .heading_h3{color:rgba(255,255,255,.75)}.promo__card .subheading{margin-bottom:32px}.promo__card span{font-size:32px;line-height:32px;font-weight:300;color:#ffc700}.promo__list ul{display:flex;justify-content:space-between;flex-wrap:wrap;margin:32px 0 40px}.promo__list-item{margin:0 20px 32px 0}.promo__list-item span{display:inline-block;margin-bottom:15px;width:20px;border-top:2px solid #5ad9d1}.promo__list-item p{font-size:16px;font-weight:500;color:rgba(255,255,255,.75)}.promo__vehicle{margin-top:35px}.promo__item{background:linear-gradient(71.92deg,#5ad9d1 0,rgba(90,217,209,0) 100%);flex:1 1 0;position:relative;margin-bottom:50px;padding:32px;border-radius:16px}.promo__item img{width:100%}.promo__item img.hydrocycle{max-width:470px}.promo__item img.boat{max-width:585px}.promo__item-title{text-align:right}.promo__item-title p{color:rgba(255,255,255,.75);font-weight:500}.promo__item-title span{color:#fff;font-weight:700}@media (min-width:425px){.promo__list-item{max-width:200px}}@media (min-width:768px) and (min-height:575px){.promo{padding-bottom:80px}.promo::after{content:"";position:absolute;left:0;bottom:0;width:100%;height:30px;background:url(../img/wave.png) repeat-x}.promo__telegram{display:none}.promo__item-title{font-size:24px}.promo__item-title p{line-height:32px}.promo__item-title span{line-height:24px}}@media (min-width:1024px) and (min-height:575px){.promo{margin-top:110px}.promo__card{max-width:460px;position:absolute;top:-350px;right:55px}.promo__list{margin-bottom:140px}.promo__vehicle{display:flex;margin-bottom:30px}.promo__item:first-child{margin-right:15px}.promo__item img.boat{position:absolute;bottom:0;left:-70px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
